Include viewbox with svg icon

Scale SVG to Fit Within a Certain Size without distorting:

Example:  potgold viewbox="0 0 60 55"

<figcaption>50x25</figcaption>
  <div>
    <svg viewBox="0 0 60 55" width="50" height="25">
      <use xlink:href="#potofgold"/>
    </svg>
  </div>
</figure>
<figure>
  <figcaption>100x50</figcaption>
  <div>
    <svg viewBox="0 0 60 55" width="100" height="50">
      <use xlink:href="#potofgold"/>
    </svg>
  </div>
</figure>
<figure>
  <figcaption>200x100</figcaption>
  <div>
    <svg viewBox="0 0 60 55" width="200" height="100">
      <use xlink:href="#potofgold"/>
    </svg>
  </div>
</figure>
<figure>
  <figcaption>200x50</figcaption>
  <div>
    <svg viewBox="0 0 60 55" width="200" height="50">
      <use xlink:href="#potofgold"/>
    </svg>
  </div>
</figure>
<figure>
  <figcaption>50x50</figcaption>
  <div>
    <svg viewBox="0 0 60 55" width="50" height="50">
      <use xlink:href="#potofgold"/>
    </svg>
  </div>
</figure>
<figure>
  <figcaption>50x100</figcaption>
  <div>
    <svg viewBox="0 0 60 55" width="50" height="100">
      <use xlink:href="#potofgold"/>
    </svg>
  </div>

Scale SVG to Fit the Available Width, adjust the height to match:

 <figcaption><code>img</code>, 100xauto height</figcaption>
  <div>

WIDTH WIDTH 100X AUTO HEIGHT>>>
    <img src="https://s3-us-west-2.amazonaws.com/s.cdpn.io/91525/potofgold.svg" style="width:100px">
  </div>
</figure>
<figure>
  <figcaption><code>img</code>, auto widthx50</figcaption>
  <div>

HEIGHT HEIGHT 50X AUTO WIDTH>>>>
    <img src="https://s3-us-west-2.amazonaws.com/s.cdpn.io/91525/potofgold.svg" style="height:50px">
  </div>
</figure>
<figure>


GIANT GIANT GIANT>>>
  <figcaption><code>img</code>, auto size</figcaption>
  <div>
    <img src="https://s3-us-west-2.amazonaws.com/s.cdpn.io/91525/potofgold.svg">
  </div>
</figure>


    viewBox="0 0 100 100": Defines a coordinate system 100 units wide and 100 units high. In other words, if your SVG contains a circle centered in the graphic with radius of 50px, it would fill up the height or width of the SVG image, even if the image was displayed full screen. If your SVG contained a rectangle with height="1in", it would also nearly fill up the screen, because 1 inch = 96px in CSS, and all lengths will get scaled equally.
    viewBox="5 0 90 100": Almost the same view, but cropped in by 5% on the left and right, so that the total width=90 units and the x-coordinate on the left=5.
    viewBox="-50 -50 100 100": A view with the same scale, but now with the top-left corner given the coordinates (-50, -50). Which means that the bottom-right corner has the coordinates (+50, +50). Any shapes drawn at (100, 100) will be far offscreen. If you wanted to draw a circle that completely filled the image area, it would be centered at (0, 0).


The viewBox attribute has a sidekick, preserveAspectRatio. It has no effect unless a viewBox exists to define the aspect ratio of the image. When there is a viewBox, preserveAspectRatio describes how the image should scale if the aspect ratio of the viewBox doesn't match the aspect ratio of the viewport. Most of the time, the default behavior works pretty well: the image is scaled until it just fits both the height and width, and it is centered within any extra space.

Just like viewBox, preserveAspectRatio has a lot of information in a single attribute. The default behavior can be explicitly set with preserveAspectRatio="xMidYMid meet". The first part, xMidYMid tells the browser to center the scaled viewBox region within the available viewport region, in both the x and y directions. You can replace Mid with Min or Max to align the graphic flush against one side or the other. Watch the camelCase capitalization, though: SVG is XML, and is therefore case sensitive. The x is lowercase but the Y is capital.

The second half of the default preserveAspectRatio, meet, is the part that tells the browser to scale the graphic until it just fits both height and width. It's equivalent for CSS background images is background-size: contain;. The alternative value for SVG is slice (equivalent to background-size: cover;). A slice value will scale the image to fit the more generous dimension, and slice off the extra. Except, it doesn't necessarily slice off the extra; that depends on the value of the overflow property.


